---
#for doc purpose using <placeholder:default_value> syntax when it applies.

# FORMAT:
__dummy_framework_with_defaults:
  version: ''
  module: # defaults to `frameworks.framework_name`
  setup_args: ''
  params: {}
  project: http://url/to/project/repo
  image: # will result in built image `author/image:tag`
    author: automlbenchmark
    image:  # defaults to `framework name to lowercase`
    tag:  # defaults to `framework version`


### Non AutoML reference frameworks
constantpredictor:
  version: 'latest'
  project: https://scikit-learn.org/stable/modules/generated/sklearn.dummy.DummyClassifier.html

constantpredictor_enc:
  extends: constantpredictor
  params:
    encode: true

DecisionTree:
  version: '0.19.2'
  project: https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html

RandomForest:
  version: '0.22.2'
  project: http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html
  params:
    n_estimators: 2000
#    _n_jobs: 1   # faster, fitter, happier (running OoM on some datasets when using multiprocessing)
#    verbose: true

TunedRandomForest:
  version: '0.22.2'
  project: http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html
  params:
    n_estimators: 2000
#    _n_jobs: 1  # cf. RandomForest
#    _tuning:
#      n_estimators: 500

### AutoML frameworks
AutoGluon:
  version: "0.0.14"
  project: https://autogluon.mxnet.io

AutoGluon_best:
  extends: AutoGluon
  description: "provides the most accurate overall predictor"
  params:
    presets: best_quality

AutoGluon_fastai:
  extends: AutoGluon
  params:
    hyperparameters: {FASTAI: {}}

AutoGluon_catboost:
  extends: AutoGluon
  params:
    hyperparameters: {CAT: {}}

AutoGluon_lgbm_custom:
  extends: AutoGluon
  params:
    hyperparameters: {custom: ['GBM']}

AutoGluon_lgbm:
  extends: AutoGluon
  params:
    hyperparameters: {GBM: {}}

AutoGluon_rf:
  extends: AutoGluon
  params:
    hyperparameters: {RF: {}}

AutoGluon_xt:
  extends: AutoGluon
  params:
    hyperparameters: {'XT': {}}

AutoGluon_knn:
  extends: AutoGluon
  params:
    hyperparameters: {KNN: {}}

AutoGluon_nn:
  extends: AutoGluon
  params:
    hyperparameters: {NN: {}}

AutoGluon_fastai_ensemble:
  extends: AutoGluon
  description: "for testing"
  params:
    hyperparameters: {'NN': {},
                      'GBM': {},
                      'CAT': {},
                      'RF': [
                      {'criterion': 'gini', 'AG_args': {'name_suffix': 'Gini', 'problem_types': ['binary', 'multiclass']}},
                      {'criterion': 'entropy', 'AG_args': {'name_suffix': 'Entr', 'problem_types': ['binary', 'multiclass']}},
                      {'criterion': 'mse', 'AG_args': {'name_suffix': 'MSE', 'problem_types': ['regression']}},
                      ],
                      'XT': [
                      {'criterion': 'gini', 'AG_args': {'name_suffix': 'Gini', 'problem_types': ['binary', 'multiclass']}},
                      {'criterion': 'entropy', 'AG_args': {'name_suffix': 'Entr', 'problem_types': ['binary', 'multiclass']}},
                      {'criterion': 'mse', 'AG_args': {'name_suffix': 'MSE', 'problem_types': ['regression']}},
                      ],
                      'KNN': [
                      {'weights': 'uniform', 'AG_args': {'name_suffix': 'Unif'}},
                      {'weights': 'distance', 'AG_args': {'name_suffix': 'Dist'}},
                      ],
                      'FASTAINN': {},
                      'custom': ['GBM'],}

AutoGluon_fastai_best:
  extends: AutoGluon
  description: "for testing"
  params:
    presets: best_quality
    hyperparameters: {'NN': {},
                      'GBM': {},
                      'CAT': {},
                      'RF': [
                      {'criterion': 'gini', 'AG_args': {'name_suffix': 'Gini', 'problem_types': ['binary', 'multiclass']}},
                      {'criterion': 'entropy', 'AG_args': {'name_suffix': 'Entr', 'problem_types': ['binary', 'multiclass']}},
                      {'criterion': 'mse', 'AG_args': {'name_suffix': 'MSE', 'problem_types': ['regression']}},
                      ],
                      'XT': [
                      {'criterion': 'gini', 'AG_args': {'name_suffix': 'Gini', 'problem_types': ['binary', 'multiclass']}},
                      {'criterion': 'entropy', 'AG_args': {'name_suffix': 'Entr', 'problem_types': ['binary', 'multiclass']}},
                      {'criterion': 'mse', 'AG_args': {'name_suffix': 'MSE', 'problem_types': ['regression']}},
                      ],
                      'KNN': [
                      {'weights': 'uniform', 'AG_args': {'name_suffix': 'Unif'}},
                      {'weights': 'distance', 'AG_args': {'name_suffix': 'Dist'}},
                      ],
                      'FASTAINN': {},
                      'custom': ['GBM'],}

autosklearn:
  version: '0.6.0'
  project: https://automl.github.io/auto-sklearn/stable/

AutoPyTorch:
  version: '0.0.2'
  project: https://github.com/automl/Auto-PyTorch

AutoWEKA:
  version: '2.6'
  project: https://www.cs.ubc.ca/labs/beta/Projects/autoweka/

H2OAutoML:
  version: '3.30.0.3'
  project: http://docs.h2o.ai/h2o/latest-stable/h2o-docs/automl.html
#  params:
#    _save_artifacts: ['leaderboard', 'logs', 'models', 'models_predictions', 'mojos']

hyperoptsklearn:
  version: 'latest'
  project: http://hyperopt.github.io/hyperopt-sklearn/
  params:
    max_evals: 1000
#    verbose: true

oboe:
  version: 'latest'
  project: https://github.com/udellgroup/oboe
#  params:
#    build_ensemble: false
#    selection_method: random
#    verbose: true

ranger:
  version: '0.10.1'
  project: https://github.com/imbs-hl/ranger

TPOT:
  version: '0.11.1'
  project: https://github.com/EpistasisLab/tpot
#  params:
#    max_eval_time_mins: 2
#    population_size: 25
#    verbosity: 2

GAMA:
  version: '20.1.0'
  project: https://github.com/PGijsbers/gama

autoxgboost:
  version: '0.0.0.9000'
  project: https://github.com/ja-thomas/autoxgboost
